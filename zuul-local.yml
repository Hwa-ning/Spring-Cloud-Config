spring:
  profiles: local
eureka:
  client:
    fetch-registry: true # eureka 서버에 등록 여부
    service-url:
      defaultZone: http://localhost:18086/eureka/
logging:
  level:
    com:
      netflix: off
ribbon:
  eureka:
    enabled: true                 # eurkea 에서 서버 정보를 가져올지
  MaxAutoRetries: 0               # default : 1 / 동일 서비스 연결 시도 횟수 : (지정수+1)만큼 재시도 
  MaxAutoRetriesNextServer: 1     # default : 1 / 다음 서비스 연결 시도 횟수 : (지정수+1)만큼 다음 서비스를 찾으려 재시도   
  OkToRetryOnAllOperations: true  # default : false / HTTP Method 수행 실패시 Retry 사용 여부 
  ConnectTimeout: 3000            # default : 1000 / 서비스별 지정 
  ReadTimeout: 3000               # default : 1000 / 서비스별 지정 
  RetryableStatusCodes: 404, 408, 500, 504 
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule
                             # RoundRobin RR
                             # RandomRule 랜덤 분배
                             # ZoneAvoidanceRule 서버 상태(CPU, RAM 등) 우선 분배
                             # PredicateBasedRule 기반 조건 (ex Header) 분배 
                             # AvailabilityFilteringRule 사용 가능 서버 분배
                             # WeightedResponseTimeRule, ResponseTimeWeightedRule 응답 시간을 기준으로 인스턴스에 대한 가중치로 분배
                             # RetryRule 실패시 다시 시도, MaxAutoRetries 안에 정상적으로 이뤄지지 않으면 다음 인스턴스로 시도 
zuul:
  retryable: true
  ribbon:
    eager-load.enabled: true
  host:
    connect-timeout-millis: 3000
    socket-timeout-millis: 3000
#hystrix:
#  command:
#    default:
#      circuitBreaker:
#        requestVolumeThreshold: 10
#        errorThresholdPercentage: 50
#        sleepWindowInMilliseconds: 5000
#      execution:
#        isolation:
#          strategy: THREAD
#          thread:
#            timeoutInMilliseconds: 30000

management:
  endpoints:
    web:
      exposure:
        include: '*' # 실서비스에선 반드시 *이 아닌 노출시킬 endpoint만 노출시키거나 보안 적용 필수적임
